{"version":3,"sources":["/mnt/d/dev/web/navtree/src/modules/App/components/app.module.scss","/mnt/d/dev/web/navtree/src/stylesheets/vendor/_juice.scss","/mnt/d/dev/web/navtree/src/modules/UI/components/button.module.scss","/mnt/d/dev/web/navtree/src/stylesheets/_colors.scss","/mnt/d/dev/web/navtree/src/modules/UI/components/list.module.scss","/mnt/d/dev/web/navtree/src/modules/UI/components/link.module.scss","/mnt/d/dev/web/navtree/src/stylesheets/_config.scss","/mnt/d/dev/web/navtree/src/modules/App/components/topBar.module.scss","/mnt/d/dev/web/navtree/src/modules/App/components/sideBar.module.scss","/mnt/d/dev/web/navtree/src/modules/App/components/layout.module.scss","/mnt/d/dev/web/navtree/src/stylesheets/_utilities.scss","/mnt/d/dev/web/navtree/src/stylesheets/global.scss"],"names":[],"mappings":"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","file":"main.cac0f755.chunk.css","sourcesContent":["@import 'src/stylesheets';\n\n.self {\n  height: 100%;\n  position: relative;\n}\n\n.content {\n  background-color: #fff;\n  margin-top: 60px;\n  min-height: 300px;\n  padding: 10px;\n  padding-top: 20px;\n  width: 100%;\n\n  @include bp(medium-up) {\n    margin-top: 75px;\n  }\n\n  @include bp(large-up) {\n    margin-top: 90px;\n  }\n\n  @include bp(xlarge-up) {\n    margin-top: 100px;\n  }\n}\n\n.page {\n  display: flex;\n}\n","// --------------------------------------------------------------------\n// Juice v1.0.0\n// --------------------------------------------------------------------\n@charset \"UTF-8\";\n\n// --------------------------------------------------------------------\n// Variable settings\n// --------------------------------------------------------------------\n\n// CSS cubic-bezier timing functions.\n// Credit: http://github.com/jaukia/easie\n// EASE IN\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n// EASE OUT\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n// EASE IN OUT\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n\n// Base px\n$base-px-default: 16px !default;\n$browser-prefixes: false !default;\n\n// Prefix mixin if needed\n// Credit: http://bourbon.io/docs/#prefixer\n@mixin juice-prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      -webkit-#{$property}: #{$value};\n    } @else if $prefix == moz {\n      -moz-#{$property}: #{$value};\n    } @else if $prefix == ms {\n      -ms-#{$property}: #{$value};\n    } @else if $prefix == o {\n      -o-#{$property}: #{$value};\n    } @else if $prefix == spec {\n      #{$property}: #{$value};\n    } @else {\n      @warn 'Unrecognized prefix: #{$prefix}';\n    }\n  }\n}\n\n// Strip the units from a value\n// ----------------------------\n@function strip-units($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n// Calculate rems from a px value\n// ------------------------------\n@function rem-calc($px, $base-val: $base-px-default) {\n  @if not unitless($px) {\n    $px: strip-units($px);\n  }\n  @if not unitless($base-val) {\n    $base-val: strip-units($base-val);\n  }\n  @return ($px / $base-val) * 1rem;\n}\n\n// Calculate ems from a px value\n// ------------------------------\n@function em-calc($px, $base-val: $base-px-default) {\n  @if not unitless($px) {\n    $px: strip-units($px);\n  }\n  @if not unitless($base-val) {\n    $base-val: strip-units($base-val);\n  }\n  @return ($px / $base-val) * 1em;\n}\n\n// Breakpoints\n$onepx: em-calc(1) !default;\n$hdpi-ratio-default: 1.3 !default;\n$breakpoint-xlarge-default: em-calc(1920) !default;\n$breakpoint-large-default: em-calc(1440) !default;\n$breakpoint-medium-default: em-calc(1024) !default;\n$breakpoint-small-default: em-calc(640) !default;\n$breakpoint-xsmall-default: em-calc(480) !default;\n$breakpoint-xxsmall-default: em-calc(320) !default;\n// Show/Hide\n$show-display-default: block !default;\n// Border Radius\n$border-radius-default: 5px !default;\n// Placeholder Color\n$placeholder-color-default: #555 !default;\n// Triangle\n$triangle-direction-default: right !default;\n$triangle-size-default: $base-px-default !default;\n$triangle-color-default: #222 !default;\n$triangle-element-default: after !default;\n// Circle\n$circle-size-default: $base-px-default !default;\n$circle-color-default: inherit !default;\n$circle-border-width-default: null !default;\n$circle-border-color-default: #222 !default;\n$circle-display-default: inline-block !default;\n// Square\n$square-size-default: $base-px-default !default;\n$square-color-default: black !default;\n$square-border-width-default: null !default;\n$square-border-color-default: grey !default;\n$square-element-default: before !default;\n// Position\n$position-default: null !default;\n// Tint/Shade\n$mix-percent-default: 15% !default;\n\n// --------------------------------------------------------------------\n// Mixins\n// --------------------------------------------------------------------\n\n// Breakpoints\n// Inspiration: http://www.sitepoint.com/managing-responsive-breakpoints-sass/\n// ---------------------------------------------------------------------------\n$breakpoints: (\n  'xxlarge': '(min-width: #{$breakpoint-xlarge-default + $onepx})',\n  'xlarge-only':\n  '(min-width: #{$breakpoint-large-default + $onepx}) and (max-width: #{$breakpoint-xlarge-default})',\n  'xlarge-up': '(min-width: #{$breakpoint-large-default + $onepx})',\n  'xlarge': '(max-width: #{$breakpoint-xlarge-default})',\n  'large-only':\n  '(min-width: #{$breakpoint-medium-default + $onepx}) and (max-width: #{$breakpoint-large-default})',\n  'large-up': '(min-width: #{$breakpoint-medium-default + $onepx})',\n  'large': '(max-width: #{$breakpoint-large-default})',\n  'medium-only':\n  '(min-width: #{$breakpoint-small-default + $onepx}) and (max-width: #{$breakpoint-medium-default})',\n  'medium-up': '(min-width: #{$breakpoint-small-default + $onepx})',\n  'medium': '(max-width: #{$breakpoint-medium-default})',\n  'small-only':\n  '(min-width: #{$breakpoint-xsmall-default + $onepx}) and (max-width: #{$breakpoint-small-default})',\n  'small-up': '(min-width: #{$breakpoint-xsmall-default + $onepx})',\n  'small': '(max-width: #{$breakpoint-small-default})',\n  'xsmall-only':\n  '(min-width: #{$breakpoint-xxsmall-default + $onepx}) and (max-width: #{$breakpoint-xsmall-default})',\n  'xsmall-up': '(min-width: #{$breakpoint-xxsmall-default + $onepx})',\n  'xsmall': '(max-width: #{$breakpoint-xsmall-default})',\n  'xxsmall': '(max-width: #{$breakpoint-xxsmall-default})',\n  'iphone3':\n  '(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1)',\n  'iphone3-landscape':\n  '(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1) and (orientation: landscape)',\n  'iphone3-portrait':\n  '(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 1) and (orientation: portrait)',\n  'iphone4':\n  '(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3)',\n  'iphone4-landscape':\n  '(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3) and (orientation: landscape)',\n  'iphone4-portrait':\n  '(min-device-width: 320px) and (max-device-width: 480px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 2/3) and (orientation: portrait)',\n  'iphone5':\n  '(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71)',\n  'iphone5-landscape':\n  '(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71) and (orientation: landscape)',\n  'iphone5-portrait':\n  '(min-device-width: 320px) and (max-device-width: 568px) and (-webkit-device-pixel-ratio: 2) and (device-aspect-ratio: 40/71) and (orientation: portrait)',\n  'iphone6':\n  '(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2)',\n  'iphone6-landscape':\n  '(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)',\n  'iphone6-portrait':\n  '(min-device-width: 375px) and (max-device-width: 667px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)',\n  'iphone6-plus':\n  '(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3)',\n  'iphone6-plus-landscape':\n  '(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: landscape)',\n  'iphone6-plus-portrait':\n  '(min-device-width: 414px) and (max-device-width: 736px) and (-webkit-device-pixel-ratio: 3) and (orientation: portrait)',\n  'ipad': '(min-device-width: 768px) and (max-device-width: 1024px)',\n  'ipad-landscape':\n  '(min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape)',\n  'ipad-portrait':\n  '(min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait)',\n  'ipad-retina':\n  '(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2)',\n  'ipad-retina-landscape':\n  '(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: landscape)',\n  'ipad-retina-portrait':\n  '(min-device-width: 768px) and (max-device-width: 1024px) and (-webkit-device-pixel-ratio: 2) and (orientation: portrait)',\n  'hdpi':\n  '(-webkit-min-device-pixel-ratio: $hdpi-ratio-default), only screen and (min--moz-device-pixel-ratio: $hdpi-ratio-default), only screen and (-moz-min-device-pixel-ratio: $hdpi-ratio-default),\tonly screen and (-o-min-device-pixel-ratio: #{$hdpi-ratio-default}/1), only screen and (min-resolution: #{round($hdpi-ratio-default*96)}dpi), only screen and (min-resolution: #{$hdpi-ratio-default}dppx)'\n);\n@mixin bp($break, $viewport1: null) {\n  // preset breakpoint\n  @if not $viewport1 {\n    @if map-has-key($breakpoints, $break) {\n      @media only screen and #{map-get($breakpoints, $break)} {\n        @content;\n      }\n    } @else {\n      @warn \"Couldn't find a breakpoint named #{$break}.\";\n    }\n  } @else {\n    // min breakpoint\n    @if $break == min {\n      @media screen and (min-width: $viewport1) {\n        @content;\n      }\n    }\n    // max breakpoint\n    @else if $break == max {\n      @media screen and (max-width: $viewport1) {\n        @content;\n      }\n    }\n    // min & max breakpoint\n    @else {\n      @media screen and (min-width: $break) and (max-width: $viewport1) {\n        @content;\n      }\n    }\n  }\n}\n\n// Show/Hide Element\n// -----------------\n@mixin show($breakpoint: null, $display: $show-display-default) {\n  @if $breakpoint {\n    display: none;\n    @include bp($breakpoint) {\n      display: $display;\n    }\n  } @else {\n    display: $display;\n  }\n}\n@mixin hide($breakpoint: null) {\n  @if $breakpoint {\n    @include bp($breakpoint) {\n      display: none !important;\n    }\n  } @else {\n    display: none !important;\n  }\n}\n\n// Single side border radius\n// -------------------------\n@mixin border-top-radius($radius: $border-radius-default) {\n  border-top-left-radius: $radius;\n  border-top-right-radius: $radius;\n}\n@mixin border-right-radius($radius: $border-radius-default) {\n  border-bottom-right-radius: $radius;\n  border-top-right-radius: $radius;\n}\n@mixin border-bottom-radius($radius: $border-radius-default) {\n  border-bottom-left-radius: $radius;\n  border-bottom-right-radius: $radius;\n}\n@mixin border-left-radius($radius: $border-radius-default) {\n  border-bottom-left-radius: $radius;\n  border-top-left-radius: $radius;\n}\n\n// Transforms\n// ----------\n@mixin transform-single($property, $value) {\n  @if $browser-prefixes {\n    @include juice-prefixer(\n      transform,\n      #{$property}unquote('(') #{$value}unquote(')'),\n      webkit moz ms o spec\n    );\n  } @else {\n    transform: #{$property}unquote('(') #{$value}unquote(')');\n  }\n}\n@mixin rotate($deg) {\n  @include transform-single(rotate, $deg);\n}\n@mixin rotateX($deg) {\n  @include transform-single(rotateX, $deg);\n}\n@mixin rotateY($deg) {\n  @include transform-single(rotateY, $deg);\n}\n@mixin rotateZ($deg) {\n  @include transform-single(rotateZ, $deg);\n}\n@mixin rotate3d($x, $y, $z, $deg) {\n  $multi-var: $x, $y, $z, $deg;\n  @include transform-single(rotate3d, $multi-var);\n}\n@mixin scale($ratio) {\n  @include transform-single(scale, $ratio);\n}\n@mixin scaleX($ratio) {\n  @include transform-single(scaleX, $ratio);\n}\n@mixin scaleY($ratio) {\n  @include transform-single(scaleY, $ratio);\n}\n@mixin scaleZ($ratio) {\n  @include transform-single(scaleZ, $ratio);\n}\n@mixin scale3d($x, $y, $z) {\n  $multi-var: $x, $y, $z;\n  @include transform-single(scale3d, $multi-var);\n}\n@mixin skew($x, $y) {\n  $multi-var: $x, $y;\n  @include transform-single(skew, $multi-var);\n  backface-visibility: hidden;\n}\n@mixin skewX($deg) {\n  @include transform-single(skewX, $deg);\n  backface-visibility: hidden;\n}\n@mixin skewY($deg) {\n  @include transform-single(skewY, $deg);\n  backface-visibility: hidden;\n}\n@mixin translate($x, $y) {\n  $multi-var: $x, $y;\n  @include transform-single(translate, $multi-var);\n}\n@mixin translateX($x) {\n  @include transform-single(translateX, $x);\n}\n@mixin translateY($y) {\n  @include transform-single(translateY, $y);\n}\n@mixin translateZ($z) {\n  @include transform-single(translateZ, $z);\n}\n@mixin translate3d($x, $y, $z) {\n  $multi-var: $x, $y, $z;\n  @include transform-single(translate3d, $multi-var);\n}\n\n// Emboss effect\n// -------------\n@mixin box-emboss($opacity: 0.5, $opacity2: 0.5) {\n  @if $browser-prefixes {\n    @include juice-prefixer(\n      box-shadow,\n      'rgba(white,#{$opacity}) 0 1px 0, inset rgba(black,#{$opacity2}) 0 1px 0',\n      webkit spec\n    );\n  } @else {\n    box-shadow: rgba(white, $opacity) 0 1px 0,\n      inset rgba(black, $opacity2) 0 1px 0;\n  }\n}\n\n// Letterpress effect\n// ------------------\n@mixin letterpress($opacity: 0.5) {\n  text-shadow: rgba(white, $opacity) 0 1px 0;\n}\n\n// Placeholder text\n// ----------------\n@mixin placeholder-color($color: $placeholder-color-default) {\n  @if $browser-prefixes {\n    &::-webkit-input-placeholder {\n      color: $color;\n    }\n\n    &::-moz-placeholder {\n      color: $color;\n    }\n\n    &::-ms-input-placeholder {\n      color: $color;\n    }\n\n    &::placeholder {\n      color: $color;\n    }\n  } @else {\n    &::placeholder {\n      color: $color;\n    }\n  }\n}\n\n// Sizing\n// ------\n@mixin size($width, $height: $width) {\n  height: $height;\n  width: $width;\n}\n\n// Normal & hover state\n// --------------------\n@mixin hoverer($property, $normal, $hovered) {\n  &:hover {\n    #{$property}: $hovered;\n  }\n  #{$property}: $normal;\n}\n\n// Add responsive styling for multiple breakpoints\n// -----------------------------------------------\n@mixin responsive($property, $base, $medium: false, $small: false) {\n  #{$property}: $base;\n  @if $medium {\n    @include bp(medium) {\n      #{$property}: $medium;\n    }\n  }\n  @if $small {\n    @include bp(small) {\n      #{$property}: $small;\n    }\n  }\n}\n\n// Create a triangle using borders\n// -------------------------------\n@mixin triangle(\n  $direction: $triangle-direction-default,\n  $size: $triangle-size-default,\n  $color: $triangle-color-default,\n  $center: false,\n  $element: $triangle-element-default\n) {\n  &:#{$element} {\n    @include size(0);\n    border-style: solid;\n    content: '';\n    -webkit-transform: rotate(360deg);\n    @if not $center {\n      position: absolute;\n    }\n    @if $direction == up {\n      border-color: transparent transparent $color transparent;\n      border-width: 0 $size ($size * 1.625) $size;\n      @if $center {\n        @include absolute(null, null, 100%, 50%);\n        @if $browser-prefixes {\n          @include juice-prefixer(\n            transform,\n            translateX(-$size),\n            webkit moz ms o spec\n          );\n        } @else {\n          transform: translateX(-$size);\n        }\n      }\n    } @else if $direction == up-right {\n      border-color: transparent $color transparent transparent;\n      border-width: 0 $size $size 0;\n      @if $center {\n        @include absolute(0, 0);\n      }\n    } @else if $direction == right {\n      border-color: transparent transparent transparent $color;\n      border-width: $size 0 $size ($size * 1.625);\n      @if $center {\n        @include absolute(50%, null, null, 100%);\n        @if $browser-prefixes {\n          @include juice-prefixer(\n            transform,\n            translateY(-$size),\n            webkit moz ms o spec\n          );\n        } @else {\n          transform: translateY(-$size);\n        }\n      }\n    } @else if $direction == down-right {\n      border-color: transparent transparent $color transparent;\n      border-width: 0 0 $size $size;\n      @if $center {\n        @include absolute(null, 0, 0);\n      }\n    } @else if $direction == down {\n      border-color: $color transparent transparent transparent;\n      border-width: ($size * 1.625) $size 0 $size;\n      @if $center {\n        @include absolute(100%, null, null, 50%);\n        @if $browser-prefixes {\n          @include juice-prefixer(\n            transform,\n            translateX(-$size),\n            webkit moz ms o spec\n          );\n        } @else {\n          transform: translateX(-$size);\n        }\n      }\n    } @else if $direction == down-left {\n      border-color: transparent transparent transparent $color;\n      border-width: $size 0 0 $size;\n      @if $center {\n        @include absolute(null, null, 0, 0);\n      }\n    } @else if $direction == left {\n      border-color: transparent $color transparent transparent;\n      border-width: $size ($size * 1.625) $size 0;\n      @if $center {\n        @include absolute(50%, 100%);\n        @if $browser-prefixes {\n          @include juice-prefixer(\n            transform,\n            translateY(-$size),\n            webkit moz ms o spec\n          );\n        } @else {\n          transform: translateY(-$size);\n        }\n      }\n    } @else if $direction == up-left {\n      border-color: $color transparent transparent transparent;\n      border-width: $size $size 0 0;\n      @if $center {\n        @include absolute(0, null, null, 0);\n      }\n    } @else {\n      @warn 'Available directions: up, up-right, right, down-right, down, down-left, left, up-left.';\n    }\n    @content;\n  }\n}\n\n// Create a circle, with an optional border\n// ----------------------------------------\n@mixin circle(\n  $size: $circle-size-default,\n  $color: $circle-color-default,\n  $border-width: $circle-border-width-default,\n  $border-color: $circle-border-color-default,\n  $display: $circle-display-default\n) {\n  border-radius: 50%;\n  display: $display;\n  @if $border-width {\n    @include size($size);\n    background-color: $color;\n    border: $border-width solid $border-color;\n  } @else {\n    @if $color == inherit {\n      @include size(0);\n      border-style: solid;\n      border-width: $size/2;\n    } @else {\n      @include size($size);\n      background-color: $color;\n    }\n  }\n}\n\n// Create a psuedo element square, with an optional border\n// -------------------------------------------------------\n@mixin square(\n  $size: $square-size-default,\n  $color: $square-color-default,\n  $border-width: $square-border-width-default,\n  $border-color: $square-border-color-default,\n  $element: $square-element-default\n) {\n  &:#{$element} {\n    @include size($size);\n    background: $color;\n    content: '';\n    position: absolute;\n    @if $border-width {\n      border: $border-width solid $border-color;\n    }\n  }\n}\n\n// Advanced positioning\n// --------------------\n@mixin position(\n  $type,\n  $top: $position-default,\n  $right: $position-default,\n  $bottom: $position-default,\n  $left: $position-default\n) {\n  $allowed_types: absolute relative fixed;\n  position: $type;\n  @if not index($allowed_types, $type) {\n    @warn 'Unknown position: #{$type}.';\n  }\n  @each $data in top $top, right $right, bottom $bottom, left $left {\n    #{nth($data, 1)}: nth($data, 2);\n  }\n}\n@mixin absolute(\n  $top: $position-default,\n  $right: $position-default,\n  $bottom: $position-default,\n  $left: $position-default\n) {\n  @include position(absolute, $top, $right, $bottom, $left);\n}\n@mixin relative(\n  $top: $position-default,\n  $right: $position-default,\n  $bottom: $position-default,\n  $left: $position-default\n) {\n  @include position(relative, $top, $right, $bottom, $left);\n}\n@mixin fixed(\n  $top: $position-default,\n  $right: $position-default,\n  $bottom: $position-default,\n  $left: $position-default\n) {\n  @include position(fixed, $top, $right, $bottom, $left);\n}\n\n// Easily set an element's \"trbl\" values\n// -------------------------------------\n@mixin trbl(\n  $top: $position-default,\n  $right: $position-default,\n  $bottom: $position-default,\n  $left: $position-default\n) {\n  @each $data in top $top, right $right, bottom $bottom, left $left {\n    #{nth($data, 1)}: nth($data, 2);\n  }\n}\n@mixin top-left {\n  @include trbl(0, null, null, 0);\n}\n@mixin top-right {\n  @include trbl(0, 0);\n}\n@mixin bottom-left {\n  @include trbl(null, null, 0, 0);\n}\n@mixin bottom-right {\n  @include trbl(null, 0, 0, null);\n}\n\n// Preload Images\n// Credit: http://codepen.io/pixelass/details/vEKZRq\n// -------------------------------------------------\n@mixin image-preload($preload: run) {\n  @if not variable-exists(_preload-image-list) {\n    $_preload-image-list: () !global;\n  }\n  @if not variable-exists(_preload-image-urls) {\n    $_preload-image-urls: () !global;\n  }\n  @if not variable-exists(_preload-images-loaded) {\n    $_preload-images-loaded: false !global;\n  }\n  @if $preload == run and not $_preload-images-loaded {\n    $_preload-images-loaded: true !global;\n\n    html:after {\n      background-image: $_preload-image-urls;\n      content: '';\n      display: none;\n    }\n  } @else {\n    $_preload-image-list: join($preload, $_preload-image-list) !global;\n    $image-urls: ();\n    @if length($_preload-image-list) > 0 {\n      $result: ();\n      $_preload-image-urls: $result !global;\n      @for $i from 1 through length($_preload-image-list) {\n        $image-urls: join(url(#{nth($_preload-image-list, $i)}), $image-urls);\n      }\n      @each $item in $image-urls {\n        @if not index($result, $item) {\n          $result: append($result, $item, comma);\n        }\n      }\n    }\n  }\n}\n\n// --------------------------------------------------------------------\n// Helper Mixins\n// --------------------------------------------------------------------\n\n// Clearfix\n// --------\n@mixin clearfix {\n  *zoom: 1;\n\n  &:before,\n  &:after {\n    content: '';\n    display: table;\n    line-height: 0;\n  }\n\n  &:after {\n    clear: both;\n  }\n}\n\n// Hide text\n// ---------\n@mixin hide-text {\n  color: transparent;\n  font: 0/0 a;\n  text-shadow: none;\n}\n\n// Center an element vertically and horizontally\n// ---------------------------------------------\n@mixin centerer {\n  @include absolute(50%, null, null, 50%);\n  @if $browser-prefixes {\n    @include juice-prefixer(\n      transform,\n      translate(-50%, -50%),\n      webkit moz ms o spec\n    );\n  } @else {\n    transform: translate(-50%, -50%);\n  }\n}\n\n// Center an element vertically\n// ----------------------------\n@mixin vert-centerer {\n  @include relative(50%);\n  @if $browser-prefixes {\n    @include juice-prefixer(transform, translateY(-50%), webkit moz ms o spec);\n  } @else {\n    transform: translateY(-50%);\n  }\n}\n\n// Cover everything\n// ----------------\n@mixin coverer {\n  @include absolute(0, null, null, 0);\n  @include size(100%);\n}\n\n// Center a block level element\n// ----------------------------\n@mixin center-block {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n// Clean an element\n// ----------------\n@mixin clean {\n  margin: 0;\n  padding: 0;\n}\n\n// ----------------------------------\n// Functions\n// ----------------------------------\n\n// Mix white with another color\n// ----------------------------\n@function tint($color, $percent: $mix-percent-default) {\n  @return mix(white, $color, $percent);\n}\n\n// Mix black with another color\n// ----------------------------\n@function shade($color, $percent: $mix-percent-default) {\n  @return mix(black, $color, $percent);\n}\n\n// Create a random color\n// ---------------------\n@function random-color($min: 0, $max: 255, $alpha: 1) {\n  $red: random($max) + $min;\n  $green: random($max) + $min;\n  $blue: random($max) + $min;\n  @if $min < 0 {\n    $min: -1;\n  } @else {\n    $min: $min - 1;\n  }\n  @if $max > 255 {\n    $max: 256;\n  } @else {\n    $max: $max + 1;\n  }\n  @return rgba($red, $green, $blue, $alpha);\n}\n\n// Reverse a string\n// Credit: https://coderwall.com/p/rhu_uw/sass-str-reverse-function\n// ----------------\n@function reverse($string) {\n  $reversed-string: '';\n  @for $i from 1 through str-length($string) {\n    $char: str-slice($string, $i, $i);\n    $reversed-string: '#{$char}#{$reversed-string}';\n  }\n  @return #{$reversed-string};\n}\n","@import 'src/stylesheets';\n\n$_background: $color-pressed-hover;\n$_background-hover: $color-pressed;\n$_color-text: $color-primary-alt;\n\n.self {\n  background: $_background;\n  border: 1px solid rgba(#fff, 0.4);\n  color: $_color-text;\n  color: $_color-text;\n  font-size: 16px;\n  font-weight: normal;\n  padding: 10px 25px;\n  transition: $transition-duration-hover all;\n\n  &:hover {\n    background: $_background-hover;\n    border-color: rgba(#fff, 0.8);\n  }\n}\n\n.tSecondary {\n  background-color: #4a4;\n}\n\n.tNoBackground,\n.tNoBackground:hover,\n.tNoBackground:focus {\n  background-color: transparent;\n  border: unset;\n  outline: unset;\n\n  &::before {\n    background-color: transparent;\n  }\n}\n\n.tTransparent {\n  background-color: transparent;\n}\n","$color-primary: #225a45;\n$color-secondary: #5a66d6;\n\n$color-primary-alt: #ffff67;\n\n$color-primary-text: #fff;\n\n$color-dark-text: #334;\n\n$color-primary-bg: #f9f9f9;\n\n$color-pressed: #546de5;\n$color-pressed-hover: $color-secondary;\n",".self {\n  margin: 0;\n  padding: 0;\n}\n\n.item {\n  list-style: none;\n}\n","@import 'src/stylesheets';\n\n.self {\n  text-decoration: none;\n  transition: all $transition-duration-hover;\n}\n","$transition-duration-hover: 0.15s;\n","@import 'src/stylesheets';\n\n$_background: $color-primary;\n$_items-text-color: #fff;\n$item-hover-transition-duration: 0.3s;\n\n.self {\n  background-color: $_background;\n  color: $color-primary-text;\n  height: 60px;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 1000;\n\n  @include bp(medium-up) {\n    height: 75px;\n  }\n\n  @include bp(large-up) {\n    height: 90px;\n  }\n\n  @include bp(xlarge-up) {\n    height: 100px;\n  }\n}\n\n.selfInner {\n  align-items: center;\n  display: flex;\n  height: 100%;\n  margin: 0 auto;\n  max-width: 1200px;\n  padding: 0 10px;\n}\n\n.logo {\n  align-items: center;\n  border-radius: 5px;\n  color: #fff;\n  display: flex;\n  font-size: 1.6em;\n  justify-content: left;\n  line-height: 128px;\n  padding-left: 5px;\n}\n\n.burger {\n  flex: 2;\n  text-align: right;\n}\n\n.burgerButton {\n  @include size(48px);\n  color: $_items-text-color;\n  padding: 0;\n\n  svg {\n    @include size(28px);\n  }\n}\n","@import 'src/stylesheets';\n\n$item-color: #8c99d6;\n$item-background-hover: #fafaff;\n\n.self {\n  $animation-duration: 0.1s;\n  background-color: #fff;\n  bottom: 0;\n  left: 100%;\n  padding-top: 60px;\n  position: fixed;\n  right: -100%;\n  top: 0;\n  transition: right $animation-duration, left $animation-duration;\n  z-index: 999;\n\n  @include bp(medium-up) {\n    left: unset;\n    padding-top: 75px;\n    position: relative;\n    right: unset;\n    width: 280px;\n  }\n\n  @include bp(large-up) {\n    padding-top: 90px;\n  }\n\n  @include bp(xlarge-up) {\n    padding-top: 100px;\n  }\n}\n\n.selfIsOpen {\n  left: 68px;\n  right: 0;\n}\n\n.list {\n}\n\n.item {\n  $borders-color: darken($item-background-hover, 1%);\n  border-bottom: 1px solid;\n  border-color: $borders-color;\n\n  &:last-child {\n    border-bottom: unset;\n  }\n}\n\n.itemLink {\n  color: $item-color;\n  display: block;\n  font-weight: bold;\n  padding: 20px 10px;\n\n  &:hover,\n  &:focus {\n    background-color: $item-background-hover;\n    color: darken($item-color, 10%);\n  }\n}\n","@import 'src/stylesheets';\n\n.self {\n  background: rgba(#000, 0.5);\n  bottom: 0;\n  cursor: pointer;\n  left: 0;\n  opacity: 0;\n  position: fixed;\n  top: 0;\n  transition: opacity $transition-duration-hover ease-out;\n  z-index: 998;\n\n  &.isVisible {\n    opacity: 1;\n    width: 100%;\n  }\n}\n",".u-loader {\n  & > div {\n    background-color: #2769cd;\n  }\n}\n\n.u-hide {\n  display: none !important;\n}\n\n.u-hide-large {\n  @include bp(large) {\n    display: none !important;\n  }\n}\n\n.u-show-large {\n  @media only screen and (min-width: $breakpoint-large-default) {\n    display: none !important;\n  }\n}\n\n.u-hide-medium {\n  @include bp(medium) {\n    display: none !important;\n  }\n}\n\n.u-show-medium {\n  @media only screen and (min-width: $breakpoint-medium-default) {\n    display: none !important;\n  }\n}\n\n.u-hide-small {\n  @include bp(small) {\n    display: none !important;\n  }\n}\n\n.u-show-small {\n  @media only screen and (min-width: $breakpoint-small-default) {\n    display: none !important;\n  }\n}\n","@import 'index';\n@import 'utilities';\n\n* {\n  font-family: 'Segoe UI';\n}\n\nhtml,\nbody {\n  background-color: $color-primary-bg;\n  color: $color-dark-text;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\n#root {\n  height: 100%;\n}\n\nh1,\nh2,\nh3,\nh4 {\n  margin: 0;\n  padding: 0;\n}\n\nh1 {\n  font-size: 1.7em;\n}\n\nh3 {\n  font-size: 1.1em;\n}\n"]}