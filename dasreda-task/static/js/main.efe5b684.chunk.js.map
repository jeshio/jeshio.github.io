{"version":3,"sources":["helpers/getSubModuleState.js","modules/Repositories/Filters/components/CLicense.jsx","modules/Repositories/Filters/components/CName.jsx","styles/mediaSizes.js","styles/mediaDevices.js","modules/Repositories/Filters/Presentation.jsx","modules/Repositories/Filters/store/actions.js","modules/Repositories/Filters/store/actionTypes.js","modules/Repositories/Filters/Container.jsx","modules/Repositories/constants.js","modules/Repositories/Filters/constants.js","modules/Repositories/Filters/store/reducer.js","modules/Repositories/Filters/store/index.js","modules/Repositories/Filters/store/initialState.js","modules/Repositories/Filters/index.js","modules/Repositories/moduleReducer.js","modules/Repositories/List/components/CList.jsx","modules/UI/Components/Spinner.jsx","modules/Repositories/List/components/CLoading.jsx","modules/Repositories/List/Presentation.jsx","modules/Repositories/List/Container.jsx","modules/Repositories/List/utils/getMonthAgoDate.js","modules/Repositories/List/index.js","pages/Main/index.jsx","serviceWorker.js","rootReducer.js","configApolloClient.js","index.js","configureStore.js"],"names":["getSubModuleState","store","moduleName","subModuleName","CLicense","_ref","value","onChange","react_default","a","createElement","lib","placeholder","CName","mediaSizes","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","mediaDevices","concat","desktopL","Root","styled","div","_templateObject","Field","_templateObject2","Presentation","handleChangeFilter","name","_this","props","actions","changeFilters","Object","defineProperty","subModuleStore","this","components_CLicense","license","components_CName","PureComponent","fields","type","payload","Container","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","Presentation_Presentation","Component","connect","dispatch","bindActionCreators","reducer","state","length","undefined","action","objectSpread","combineReducers","Filters","CList_templateObject","ListItem","CList_templateObject2","Name","h3","_templateObject3","Description","p","_templateObject4","Footer","_templateObject5","CList","loading","error","items","loadingComponent","message","CList_Root","map","_ref2","id","description","url","createdAt","stars","href","target","rel","Spinner","Spinner_templateObject","CLoading_templateObject","CLoading","CLoading_Root","Components_Spinner","Presentation_templateObject","_this$props","repositoriesList","onNextClick","Presentation_Root","components_CList","assign","components_CLoading","onClick","appearance","repositoriesListQuery","kind","definitions","operation","variableDefinitions","variable","directives","selectionSet","selections","typeCondition","loc","start","end","source","body","locationOffset","line","column","getExtraQueryString","extraFilters","date","Date","setMonth","getMonth","getFullYear","padStart","getDate","toString","getMonthAgoDate","graphqlQueries","graphql","options","filtersState","variables","queryString","List_Presentation_Presentation","nextClickHandler","get","_this$props$repositor","search","edges","_ref3","node","cursor","stargazers","totalCount","licenseInfo","filter","_ref4","String","includes","_this$props$repositor2","fetchMore","lastCursor","query","updateQuery","previousResult","_ref5","fetchMoreResult","toConsumableArray","compose","Main","List","Boolean","window","location","hostname","match","Repositories","GRAPHQL_API_URL","AppComponent","initialState","middlewares","thunk","composedEnhancers","applyMiddleware","createStore","rootReducer","configureStore","apolloClient","ApolloClient","uri","headers","authorization","process","ReactDOM","render","react_apollo_esm","client","es","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efe5b684.chunk.js","sourcesContent":["export default function getSubModuleState(store, moduleName, subModuleName) {\n\treturn store[moduleName][subModuleName];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'rsuite';\n\nfunction CLicense({ value, onChange }) {\n\treturn <Input placeholder=\"Лицензия...\" onChange={onChange} value={value} />;\n}\n\nCLicense.propTypes = {\n\tonChange: PropTypes.func.isRequired,\n\tvalue: PropTypes.string.isRequired,\n};\n\nexport default CLicense;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'rsuite';\n\nfunction CName({ value, onChange }) {\n\treturn <Input placeholder=\"Название...\" onChange={onChange} value={value} />;\n}\n\nCName.propTypes = {\n\tonChange: PropTypes.func.isRequired,\n\tvalue: PropTypes.string.isRequired,\n};\n\nexport default CName;\n","const mediaSizes = {\n\tmobileS: '320px',\n\tmobileM: '375px',\n\tmobileL: '425px',\n\ttablet: '768px',\n\tlaptop: '1024px',\n\tlaptopL: '1440px',\n\tdesktop: '2560px',\n};\n\nexport { mediaSizes as sizes };\n\nexport default mediaSizes;\n","import mediaSizes from './mediaSizes';\n\nconst mediaDevices = {\n\tmobileS: `(min-width: ${mediaSizes.mobileS})`,\n\tmobileM: `(min-width: ${mediaSizes.mobileM})`,\n\tmobileL: `(min-width: ${mediaSizes.mobileL})`,\n\ttablet: `(min-width: ${mediaSizes.tablet})`,\n\tlaptop: `(min-width: ${mediaSizes.laptop})`,\n\tlaptopL: `(min-width: ${mediaSizes.laptopL})`,\n\tdesktop: `(min-width: ${mediaSizes.desktop})`,\n\tdesktopL: `(min-width: ${mediaSizes.desktop})`,\n};\n\nexport { mediaDevices };\n\nexport default mediaDevices;\n","import React, { PureComponent } from 'react';\nimport CLicense from './components/CLicense';\nimport styled from 'styled-components';\nimport CName from './components/CName';\nimport mediaDevices from 'src/styles/mediaDevices';\n\nconst Root = styled.div`\n\t@media ${mediaDevices.mobileL} {\n\t\tpadding: 1rem 0;\n\t\tdisplay: flex;\n\n\t\t& > * {\n\t\t\tflex: 1;\n\t\t\tmax-width: 25rem;\n\t\t}\n\t}\n`;\n\nconst Field = styled.div`\n\tpadding: 0.25rem;\n`;\n\nexport default class Presentation extends PureComponent {\n\thandleChangeFilter = name => value =>\n\t\tthis.props.actions.changeFilters({ [name]: value });\n\n\trender() {\n\t\tconst { subModuleStore } = this.props;\n\t\treturn (\n\t\t\t<Root>\n\t\t\t\t<Field>\n\t\t\t\t\t<CLicense\n\t\t\t\t\t\tvalue={subModuleStore.license}\n\t\t\t\t\t\tonChange={this.handleChangeFilter('license')}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<CName\n\t\t\t\t\t\tvalue={subModuleStore.name}\n\t\t\t\t\t\tonChange={this.handleChangeFilter('name')}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t</Root>\n\t\t);\n\t}\n}\n","import * as actionTypes from './actionTypes';\n\nexport const changeFilters = fields => ({\n\ttype: actionTypes.CHANGE_FILTERS,\n\tpayload: fields,\n});\n","export const CHANGE_FILTERS = 'CHANGE_FILTERS';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport getSubModuleState from 'src/helpers/getSubModuleState';\nimport Presentation from './Presentation';\nimport * as actions from './store/actions';\nimport { bindActionCreators } from 'redux';\nimport { MODULE_NAME } from '../constants';\nimport { NAME } from './constants';\n\nexport class Container extends Component {\n\trender() {\n\t\treturn <Presentation {...this.props} />;\n\t}\n}\n\nconst mapStateToProps = store => {\n\tconst state = getSubModuleState(store, MODULE_NAME, NAME);\n\treturn {\n\t\tsubModuleStore: state,\n\t};\n};\n\nconst mapDispatchToProps = dispatch => ({\n\tactions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Container);\n","export const MODULE_NAME = 'Repositories';\n","export const NAME = 'filters';\n","import initialState from './initialState';\nimport * as actionTypes from './actionTypes';\n\nexport default (state = initialState(), action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.CHANGE_FILTERS:\n\t\t\treturn { ...state, ...action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import reducer from './reducer';\n\nexport default reducer;\n","export default function initialState() {\n\treturn {\n\t\tlicense: '',\n\t\tname: '',\n\t};\n}\n","import Container from './Container';\nimport reducer from './store';\n\nexport * from './constants';\n\nexport { reducer };\n\nexport default Container;\n","import { combineReducers } from 'redux';\nimport * as Filters from './Filters';\n\nexport default combineReducers({\n\t[Filters.NAME]: Filters.reducer,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport mediaDevices from 'src/styles/mediaDevices';\n\nconst Root = styled.div``;\nconst ListItem = styled.div`\n\tmargin-bottom: 1rem;\n\tpadding: 0.5rem 1.25rem;\n`;\nconst Name = styled.h3`\n\tmargin: 0;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n`;\nconst Description = styled.p`\n\tpadding: 0.5rem 1rem;\n`;\nconst Footer = styled.div`\n\tcolor: #999;\n\n\t@media ${mediaDevices.mobileL} {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;\n\nfunction CList({ loading, error, items, loadingComponent }) {\n\tif (loading) return loadingComponent;\n\tif (error) return `Ошибка загрузки! ${error.message}`;\n\n\treturn (\n\t\t<Root>\n\t\t\t{items.map(\n\t\t\t\t({ id, name, description, url, license, createdAt, stars }) => (\n\t\t\t\t\t<ListItem key={id}>\n\t\t\t\t\t\t<Name>\n\t\t\t\t\t\t\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Name>\n\t\t\t\t\t\t<Description>{description}</Description>\n\t\t\t\t\t\t<Footer>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span>Лицензия {license || 'не установлена'}</span>, количество\n\t\t\t\t\t\t\t\tзвёзд {stars}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>Создан {createdAt}</div>\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)\n\t\t\t)}\n\t\t</Root>\n\t);\n}\n\nCList.propTypes = {\n\tloading: PropTypes.bool.isRequired,\n\terror: PropTypes.object,\n\titems: PropTypes.arrayOf(PropTypes.object),\n\tloadingComponent: PropTypes.node,\n};\n\nexport default CList;\n","import styled from 'styled-components';\n\nconst Spinner = styled.div`\n\tmargin: 2rem auto;\n\tfont-size: 10px;\n\tposition: relative;\n\ttext-indent: -9999em;\n\tborder-top: 1.1em solid rgba(60, 60, 255, 0.2);\n\tborder-right: 1.1em solid rgba(60, 60, 255, 0.2);\n\tborder-bottom: 1.1em solid rgba(60, 60, 255, 0.2);\n\tborder-left: 1.1em solid #ffffff;\n\t-webkit-transform: translateZ(0);\n\t-ms-transform: translateZ(0);\n\ttransform: translateZ(0);\n\t-webkit-animation: load8 1.1s infinite linear;\n\tanimation: load8 1.1s infinite linear;\n\n\t&,\n\t&:after {\n\t\tborder-radius: 50%;\n\t\twidth: 10em;\n\t\theight: 10em;\n\t}\n\n\t@-webkit-keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t@keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n`;\n\nexport default Spinner;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Spinner from 'src/modules/UI/Components/Spinner';\n\nconst Root = styled.div`\n\ttext-align: center;\n\tpadding: 3rem 0;\n`;\n\nconst CLoading = props => {\n\treturn (\n\t\t<Root>\n\t\t\t<Spinner />\n\t\t\tЗагрузка списка репозиториев...\n\t\t</Root>\n\t);\n};\n\nexport default CLoading;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button } from 'rsuite';\nimport CList from './components/CList';\nimport CLoading from './components/CLoading';\n\nconst Root = styled.div`\n\ttext-align: center;\n\tpadding-bottom: 3rem;\n`;\n\nexport default class Presentation extends PureComponent {\n\tstatic propTypes = {\n\t\trepositoriesList: PropTypes.object.isRequired,\n\t\tonNextClick: PropTypes.func.isRequired,\n\t};\n\n\trender() {\n\t\tconst { repositoriesList, onNextClick } = this.props;\n\t\treturn (\n\t\t\t<Root>\n\t\t\t\t<CList {...repositoriesList} loadingComponent={<CLoading />} />\n\t\t\t\t<Button onClick={onNextClick} appearance=\"primary\">\n\t\t\t\t\tЗагрузить ещё\n\t\t\t\t</Button>\n\t\t\t</Root>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { graphql } from 'react-apollo';\nimport { compose } from 'recompose';\nimport { loader as graphqlLoader } from 'graphql.macro';\nimport * as FiltersSubModule from 'src/modules/Repositories/Filters';\nimport getSubModuleState from 'src/helpers/getSubModuleState';\nimport Presentation from './Presentation';\nimport { MODULE_NAME } from '../constants';\nimport getMonthAgoDate from './utils/getMonthAgoDate';\n\nconst repositoriesListQuery = graphqlLoader(\n\t'./queries/repositoriesList.graphql'\n);\n\nconst getExtraQueryString = ({ license }) => {\n\tlet extraFilters = '';\n\tif (license.length > 0) {\n\t\textraFilters += ` license:${license}`;\n\t}\n\n\treturn `language:JavaScript sort:stars created:>=${getMonthAgoDate()}${extraFilters}`;\n};\n\nconst graphqlQueries = [\n\tgraphql(repositoriesListQuery, {\n\t\tname: 'repositoriesList',\n\t\toptions: ({ filtersState: { license } }) => {\n\t\t\treturn {\n\t\t\t\tvariables: {\n\t\t\t\t\tqueryString: getExtraQueryString({ license }),\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t}),\n];\n\nexport class Container extends Component {\n\tget repositoriesList() {\n\t\tconst { loading, error, search } = this.props.repositoriesList;\n\t\tconst { filtersState } = this.props;\n\n\t\tconst items =\n\t\t\tloading || error || !search\n\t\t\t\t? []\n\t\t\t\t: search.edges\n\t\t\t\t\t\t.map(({ node, cursor }) => ({\n\t\t\t\t\t\t\tcursor,\n\t\t\t\t\t\t\t...node,\n\t\t\t\t\t\t\tstars: node.stargazers.totalCount,\n\t\t\t\t\t\t\tlicense: node.licenseInfo ? node.licenseInfo.name : '',\n\t\t\t\t\t\t}))\n\t\t\t\t\t\t.filter(({ name }) => String(name).includes(filtersState.name));\n\n\t\treturn { ...this.props.repositoriesList, items };\n\t}\n\n\tget nextClickHandler() {\n\t\treturn () => {\n\t\t\tconst {\n\t\t\t\trepositoriesList: { fetchMore, loading, error, search },\n\t\t\t\tfiltersState: { license },\n\t\t\t} = this.props;\n\n\t\t\tif (loading || error || !search) return;\n\n\t\t\tconst lastCursor = search.edges[search.edges.length - 1].cursor;\n\n\t\t\tfetchMore({\n\t\t\t\tquery: repositoriesListQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tqueryString: getExtraQueryString({ license }),\n\t\t\t\t\tcursor: lastCursor,\n\t\t\t\t},\n\t\t\t\tupdateQuery: (previousResult, { fetchMoreResult }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...previousResult,\n\t\t\t\t\t\tsearch: {\n\t\t\t\t\t\t\t...previousResult.search,\n\t\t\t\t\t\t\tedges: [\n\t\t\t\t\t\t\t\t...previousResult.search.edges,\n\t\t\t\t\t\t\t\t...fetchMoreResult.search.edges,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Presentation\n\t\t\t\t{...this.props}\n\t\t\t\trepositoriesList={this.repositoriesList}\n\t\t\t\tonNextClick={this.nextClickHandler}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\tconst filtersState = getSubModuleState(\n\t\tstate,\n\t\tMODULE_NAME,\n\t\tFiltersSubModule.NAME\n\t);\n\n\treturn { filtersState };\n};\n\nconst mapDispatchToProps = {};\n\nexport default compose(\n\tconnect(\n\t\tmapStateToProps,\n\t\tmapDispatchToProps\n\t),\n\t...graphqlQueries\n)(Container);\n","export default function getMonthAgoDate() {\n\t// a month ago\n\tconst date = new Date();\n\tdate.setMonth(date.getMonth() - 1);\n\t// format YYYY-MM-DD\n\treturn `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(\n\t\t2,\n\t\t'0'\n\t)}-${date\n\t\t.getDate()\n\t\t.toString()\n\t\t.padStart(2, '0')}`;\n}\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport { Container, Content } from 'rsuite';\nimport { Grid } from 'rsuite';\nimport * as Repositories from 'src/modules/Repositories';\n\nconst Main = props => {\n\treturn (\n\t\t<Container>\n\t\t\t<Content>\n\t\t\t\t<Grid>\n\t\t\t\t\t<Repositories.Filters />\n\t\t\t\t\t<Repositories.List />\n\t\t\t\t</Grid>\n\t\t\t</Content>\n\t\t</Container>\n\t);\n};\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport * as Repositories from './modules/Repositories';\n\nexport default combineReducers({\n\t[Repositories.MODULE_NAME]: Repositories.moduleReducer,\n});\n","import ApolloClient from 'apollo-boost';\n\nconst GRAPHQL_API_URL = 'https://api.github.com/graphql';\n\nexport default function configApolloClient() {\n\treturn new ApolloClient({\n\t\turi: GRAPHQL_API_URL,\n\t\theaders: {\n\t\t\tauthorization: `Bearer ${\n\t\t\t\tprocess.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\n\t\t\t}`,\n\t\t},\n\t});\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from 'react-apollo';\nimport ReactDOM from 'react-dom';\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport Main from './pages/Main';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\nimport configApolloClient from './configApolloClient';\n\nconst store = configureStore();\nconst apolloClient = configApolloClient();\n\nconst AppWithProviders = AppComponent => (\n\t<ApolloProvider client={apolloClient}>\n\t\t<Provider store={store}>\n\t\t\t<AppComponent />\n\t\t</Provider>\n\t</ApolloProvider>\n);\n\nReactDOM.render(AppWithProviders(Main), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nexport default function configureStore(initialState = {}) {\n\tconst middlewares = [thunk];\n\tconst enhancers = [];\n\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n\t\tif (typeof devToolsExtension === 'function') {\n\t\t\tenhancers.push(devToolsExtension());\n\t\t}\n\n\t\tconst logger = createLogger();\n\t\tmiddlewares.push(logger);\n\t}\n\n\tconst composedEnhancers = compose(\n\t\tapplyMiddleware(...middlewares),\n\t\t...enhancers\n\t);\n\n\treturn createStore(rootReducer, initialState, composedEnhancers);\n}\n"],"sourceRoot":""}