{"version":3,"sources":["styles/mediaSizes.js","styles/mediaDevices.js","modules/List/components/CList.jsx","modules/UIComponents/Spinner.jsx","modules/List/components/CLoading.jsx","modules/List/Presentation.jsx","modules/List/Container.jsx","modules/List/utils/getMonthAgoDate.js","modules/List/index.js","modules/Filters/components/CLicense.jsx","modules/Filters/components/CName.jsx","modules/Filters/Presentation.jsx","modules/Filters/Container.jsx","modules/Filters/index.js","modules/App/Presentation.jsx","modules/App/index.js","modules/App/Container.jsx","serviceWorker.js","configApolloClient.js","index.js"],"names":["mediaSizes","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","mediaDevices","concat","desktopL","Root","styled","div","_templateObject","ListItem","_templateObject2","Name","h3","_templateObject3","Description","p","_templateObject4","Footer","_templateObject5","CList","_ref","loading","error","items","loadingComponent","message","react_default","a","createElement","map","_ref2","id","name","description","url","license","createdAt","stars","key","href","target","rel","Spinner","Spinner_templateObject","CLoading_templateObject","CLoading","props","CLoading_Root","UIComponents_Spinner","Presentation_templateObject","Presentation_templateObject2","Presentation","_this$props","this","repositoriesList","onNextClick","Presentation_Root","components_CList","Object","assign","components_CLoading","length","Presentation_Footer","lib","onClick","appearance","PureComponent","repositoriesListQuery","kind","definitions","operation","value","variableDefinitions","variable","type","directives","selectionSet","selections","arguments","typeCondition","loc","start","end","source","body","locationOffset","line","column","graphqlQueries","graphql","options","_ref$filtersList$filt","filtersList","filters","_ref$filtersList$filt2","_ref$filtersList$filt3","variables","queryString","Container","getQueryString","context","debounceKey","debounceTimeout","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","Presentation_Presentation","nextClickHandler","get","_this$props$repositor","search","edges","node","cursor","objectSpread","stargazers","totalCount","licenseInfo","_this","_this$props$repositor2","fetchMore","_this$props$filtersLi","lastCursor","query","updateQuery","previousResult","_ref3","fetchMoreResult","toConsumableArray","Component","_ref4","extraFilters","date","Date","setMonth","getMonth","getFullYear","padStart","getDate","toString","getMonthAgoDate","compose","CLicense","onChange","licenses","data","label","placeholder","style","width","CName","Filters_Presentation_templateObject","Field","Filters_Presentation_templateObject2","handleChangeFilter","onFiltersUpdate","defineProperty","Filters_Presentation_Root","components_CLicense","components_CName","defaultProps","mutate","updateFilters","Filters_Presentation_Presentation","actions","licensesList","Filters","List","App_Presentation","Boolean","window","location","hostname","match","typeDefs","interfaces","fields","GRAPHQL_API_URL","AppComponent","apolloClient","cache","InMemoryCache","link","ApolloLink","from","DebounceLink","HttpLink","uri","headers","authorization","process","writeData","__typename","ApolloClient","resolvers","Mutation","_","gql","configApolloClient_templateObject","currentFilters","readQuery","configApolloClient","ReactDOM","render","App","react_apollo_esm","client","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.986787aa.chunk.js","sourcesContent":["const mediaSizes = {\n\tmobileS: '320px',\n\tmobileM: '375px',\n\tmobileL: '425px',\n\ttablet: '768px',\n\tlaptop: '1024px',\n\tlaptopL: '1440px',\n\tdesktop: '2560px',\n};\n\nexport { mediaSizes as sizes };\n\nexport default mediaSizes;\n","import mediaSizes from './mediaSizes';\n\nconst mediaDevices = {\n\tmobileS: `(min-width: ${mediaSizes.mobileS})`,\n\tmobileM: `(min-width: ${mediaSizes.mobileM})`,\n\tmobileL: `(min-width: ${mediaSizes.mobileL})`,\n\ttablet: `(min-width: ${mediaSizes.tablet})`,\n\tlaptop: `(min-width: ${mediaSizes.laptop})`,\n\tlaptopL: `(min-width: ${mediaSizes.laptopL})`,\n\tdesktop: `(min-width: ${mediaSizes.desktop})`,\n\tdesktopL: `(min-width: ${mediaSizes.desktop})`,\n};\n\nexport { mediaDevices };\n\nexport default mediaDevices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport mediaDevices from 'src/styles/mediaDevices';\n\nconst Root = styled.div``;\nconst ListItem = styled.div`\n\tmargin-bottom: 1rem;\n\tpadding: 0.5rem 1.25rem;\n`;\nconst Name = styled.h3`\n\tmargin: 0;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\ttext-align: center;\n\n\t@media ${mediaDevices.tablet} {\n\t\ttext-align: left;\n\t}\n`;\nconst Description = styled.p`\n\tpadding: 0.5rem 1rem;\n`;\nconst Footer = styled.div`\n\tcolor: #999;\n\n\t@media ${mediaDevices.mobileL} {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;\n\nfunction CList({ loading, error, items, loadingComponent }) {\n\tif (loading) return loadingComponent;\n\tif (error) return `Ошибка загрузки! ${error.message}`;\n\n\treturn (\n\t\t<Root>\n\t\t\t{items.map(\n\t\t\t\t({ id, name, description, url, license, createdAt, stars }) => (\n\t\t\t\t\t<ListItem key={id}>\n\t\t\t\t\t\t<Name>\n\t\t\t\t\t\t\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Name>\n\t\t\t\t\t\t<Description>{description}</Description>\n\t\t\t\t\t\t<Footer>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span>Лицензия {license || 'не установлена'}</span>, количество\n\t\t\t\t\t\t\t\tзвёзд {stars}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>Создан {createdAt}</div>\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t</ListItem>\n\t\t\t\t)\n\t\t\t)}\n\t\t</Root>\n\t);\n}\n\nCList.propTypes = {\n\tloading: PropTypes.bool.isRequired,\n\terror: PropTypes.object,\n\titems: PropTypes.arrayOf(PropTypes.object),\n\tloadingComponent: PropTypes.node,\n};\n\nexport default CList;\n","import styled from 'styled-components';\n\nconst Spinner = styled.div`\n\tmargin: 2rem auto;\n\tfont-size: 10px;\n\tposition: relative;\n\ttext-indent: -9999em;\n\tborder-top: 1.1em solid rgba(60, 60, 255, 0.2);\n\tborder-right: 1.1em solid rgba(60, 60, 255, 0.2);\n\tborder-bottom: 1.1em solid rgba(60, 60, 255, 0.2);\n\tborder-left: 1.1em solid #ffffff;\n\t-webkit-transform: translateZ(0);\n\t-ms-transform: translateZ(0);\n\ttransform: translateZ(0);\n\t-webkit-animation: load8 1.1s infinite linear;\n\tanimation: load8 1.1s infinite linear;\n\n\t&,\n\t&:after {\n\t\tborder-radius: 50%;\n\t\twidth: 10em;\n\t\theight: 10em;\n\t}\n\n\t@-webkit-keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n\t@keyframes load8 {\n\t\t0% {\n\t\t\t-webkit-transform: rotate(0deg);\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\t-webkit-transform: rotate(360deg);\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n`;\n\nexport default Spinner;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Spinner from 'src/modules/UIComponents/Spinner';\n\nconst Root = styled.div`\n\ttext-align: center;\n\tpadding: 3rem 0;\n`;\n\nconst CLoading = props => {\n\treturn (\n\t\t<Root>\n\t\t\t<Spinner />\n\t\t\tЗагрузка списка репозиториев...\n\t\t</Root>\n\t);\n};\n\nexport default CLoading;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button } from 'rsuite';\nimport CList from './components/CList';\nimport CLoading from './components/CLoading';\n\nconst Root = styled.div`\n\tpadding-bottom: 3rem;\n`;\n\nconst Footer = styled.div`\n\ttext-align: center;\n`;\n\nexport default class Presentation extends PureComponent {\n\tstatic propTypes = {\n\t\trepositoriesList: PropTypes.object.isRequired,\n\t\tonNextClick: PropTypes.func.isRequired,\n\t};\n\n\trender() {\n\t\tconst { repositoriesList, onNextClick } = this.props;\n\t\treturn (\n\t\t\t<Root>\n\t\t\t\t<CList {...repositoriesList} loadingComponent={<CLoading />} />\n\t\t\t\t{repositoriesList.items.length >= 10 && (\n\t\t\t\t\t<Footer>\n\t\t\t\t\t\t<Button onClick={onNextClick} appearance=\"primary\">\n\t\t\t\t\t\t\tЗагрузить ещё\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Footer>\n\t\t\t\t)}\n\t\t\t</Root>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { compose } from 'recompose';\nimport { loader as graphqlLoader } from 'graphql.macro';\nimport Presentation from './Presentation';\nimport getMonthAgoDate from './utils/getMonthAgoDate';\n\nconst repositoriesListQuery = graphqlLoader(\n\t'./queries/repositoriesList.graphql'\n);\nconst filtersQuery = graphqlLoader(\n\t'src/modules/Filters/queries/filters.graphql'\n);\n\nconst graphqlQueries = [\n\tgraphql(filtersQuery, {\n\t\tname: 'filtersList',\n\t}),\n\tgraphql(repositoriesListQuery, {\n\t\tname: 'repositoriesList',\n\t\toptions: ({\n\t\t\tfiltersList: {\n\t\t\t\tfilters: { license = '', name = '' },\n\t\t\t},\n\t\t}) => {\n\t\t\treturn {\n\t\t\t\tvariables: {\n\t\t\t\t\tqueryString: Container.getQueryString({ license, name }),\n\t\t\t\t},\n\t\t\t\tcontext: {\n\t\t\t\t\tdebounceKey: 'repositoriesList',\n\t\t\t\t\tdebounceTimeout: 500,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t}),\n];\n\nexport class Container extends Component {\n\tstatic getQueryString = ({ license, name }) => {\n\t\tlet extraFilters = '';\n\t\tif (license.length > 0) {\n\t\t\textraFilters += ` license:${license}`;\n\t\t}\n\n\t\treturn `language:JavaScript \"${name}\" in:name sort:stars created:>=${getMonthAgoDate()}${extraFilters}`;\n\t};\n\n\tget repositoriesList() {\n\t\tconst { loading, error, search } = this.props.repositoriesList;\n\n\t\tconst items =\n\t\t\tloading || error || !search\n\t\t\t\t? []\n\t\t\t\t: search.edges.map(({ node, cursor }) => ({\n\t\t\t\t\t\tcursor,\n\t\t\t\t\t\t...node,\n\t\t\t\t\t\tstars: node.stargazers.totalCount,\n\t\t\t\t\t\tlicense: node.licenseInfo ? node.licenseInfo.name : '',\n\t\t\t\t  }));\n\n\t\treturn { ...this.props.repositoriesList, items };\n\t}\n\n\tget nextClickHandler() {\n\t\treturn () => {\n\t\t\tconst {\n\t\t\t\trepositoriesList: { fetchMore, loading, error, search },\n\t\t\t\tfiltersList: {\n\t\t\t\t\tfilters: { license, name },\n\t\t\t\t},\n\t\t\t} = this.props;\n\n\t\t\tif (loading || error || !search) return;\n\n\t\t\tconst lastCursor = search.edges[search.edges.length - 1].cursor;\n\n\t\t\tfetchMore({\n\t\t\t\tquery: repositoriesListQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tqueryString: Container.getQueryString({ license, name }),\n\t\t\t\t\tcursor: lastCursor,\n\t\t\t\t},\n\t\t\t\tupdateQuery: (previousResult, { fetchMoreResult }) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...previousResult,\n\t\t\t\t\t\tsearch: {\n\t\t\t\t\t\t\t...previousResult.search,\n\t\t\t\t\t\t\tedges: [\n\t\t\t\t\t\t\t\t...previousResult.search.edges,\n\t\t\t\t\t\t\t\t...fetchMoreResult.search.edges,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Presentation\n\t\t\t\trepositoriesList={this.repositoriesList}\n\t\t\t\tonNextClick={this.nextClickHandler}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose(...graphqlQueries)(Container);\n","export default function getMonthAgoDate() {\n\t// a month ago\n\tconst date = new Date();\n\tdate.setMonth(date.getMonth() - 1);\n\t// format YYYY-MM-DD\n\treturn `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(\n\t\t2,\n\t\t'0'\n\t)}-${date\n\t\t.getDate()\n\t\t.toString()\n\t\t.padStart(2, '0')}`;\n}\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SelectPicker } from 'rsuite';\n\nfunction CLicense({ value, onChange, licenses }) {\n\treturn (\n\t\t<SelectPicker\n\t\t\tdata={licenses.map(({ name, key }) => ({\n\t\t\t\tvalue: key,\n\t\t\t\tlabel: name,\n\t\t\t}))}\n\t\t\tplaceholder=\"Лицензия...\"\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tstyle={{ width: '100%' }}\n\t\t/>\n\t);\n}\n\nCLicense.propTypes = {\n\tlicenses: PropTypes.arrayOf(PropTypes.object),\n\tonChange: PropTypes.func.isRequired,\n\tvalue: PropTypes.string.isRequired,\n};\n\nexport default CLicense;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'rsuite';\n\nfunction CName({ value, onChange }) {\n\treturn <Input placeholder=\"Название...\" onChange={onChange} value={value} />;\n}\n\nCName.propTypes = {\n\tonChange: PropTypes.func.isRequired,\n\tvalue: PropTypes.string.isRequired,\n};\n\nexport default CName;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport CLicense from './components/CLicense';\nimport styled from 'styled-components';\nimport CName from './components/CName';\nimport mediaDevices from 'src/styles/mediaDevices';\n\nconst Root = styled.div`\n\t@media ${mediaDevices.mobileL} {\n\t\tpadding: 1rem 0;\n\t\tdisplay: flex;\n\n\t\t& > * {\n\t\t\tflex: 1;\n\t\t\tmax-width: 25rem;\n\t\t}\n\t}\n`;\n\nconst Field = styled.div`\n\tpadding: 0.25rem;\n`;\n\nexport default class Presentation extends PureComponent {\n\tstatic propTypes = {\n\t\tlicenses: PropTypes.arrayOf(PropTypes.object),\n\t\tonFiltersUpdate: PropTypes.func.isRequired,\n\t};\n\n\tstatic defaultProps = {\n\t\tlicenses: [],\n\t};\n\n\thandleChangeFilter = name => value =>\n\t\tthis.props.onFiltersUpdate({ [name]: value || '' });\n\n\trender() {\n\t\tconst { filters, licenses } = this.props;\n\t\treturn (\n\t\t\t<Root>\n\t\t\t\t<Field>\n\t\t\t\t\t<CLicense\n\t\t\t\t\t\tlicenses={licenses}\n\t\t\t\t\t\tvalue={filters.license}\n\t\t\t\t\t\tonChange={this.handleChangeFilter('license')}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<CName\n\t\t\t\t\t\tvalue={filters.name}\n\t\t\t\t\t\tonChange={this.handleChangeFilter('name')}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t</Root>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { compose } from 'recompose';\nimport { loader as graphqlLoader } from 'graphql.macro';\nimport Presentation from './Presentation';\n\nconst licensesListQuery = graphqlLoader('./queries/licensesList.graphql');\nconst updateFiltersQuery = graphqlLoader('./queries/updateFilters.graphql');\nconst filtersQuery = graphqlLoader('./queries/filters.graphql');\n\nconst graphqlQueries = [\n\tgraphql(filtersQuery, {\n\t\tname: 'filtersList',\n\t}),\n\tgraphql(licensesListQuery, {\n\t\tname: 'licensesList',\n\t}),\n\tgraphql(updateFiltersQuery, {\n\t\tprops: ({ mutate }) => ({\n\t\t\tupdateFilters: filters => mutate({ variables: { filters } }),\n\t\t}),\n\t}),\n];\n\nexport class Container extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Presentation\n\t\t\t\tfilters={this.props.filtersList.filters}\n\t\t\t\tactions={this.props.actions}\n\t\t\t\tlicenses={this.props.licensesList.licenses}\n\t\t\t\tonFiltersUpdate={this.props.updateFilters}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default compose(...graphqlQueries)(Container);\n","import Container from './Container';\n\nexport * from './constants';\n\nexport default Container;\n","import React from 'react';\nimport { Container, Content } from 'rsuite';\nimport { Grid } from 'rsuite';\nimport * as Modules from 'src/modules';\n\nconst Presentation = props => {\n\treturn (\n\t\t<Container>\n\t\t\t<Content>\n\t\t\t\t<Grid>\n\t\t\t\t\t<Modules.Filters />\n\t\t\t\t\t<Modules.List />\n\t\t\t\t</Grid>\n\t\t\t</Content>\n\t\t</Container>\n\t);\n};\n\nPresentation.propTypes = {};\n\nexport default Presentation;\n","import Container from './Container';\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Presentation from './Presentation';\n\nexport class Container extends Component {\n\trender() {\n\t\treturn <Presentation />;\n\t}\n}\n\nexport default Container;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport DebounceLink from 'apollo-link-debounce';\nimport { loader as graphqlLoader } from 'graphql.macro';\nimport gql from 'graphql-tag';\n\nconst typeDefs = graphqlLoader('./types.graphql');\n\nconst GRAPHQL_API_URL = 'https://api.github.com/graphql';\n\nexport default function configApolloClient() {\n\tconst DEFAULT_DEBOUNCE_TIMEOUT = 250;\n\tconst cache = new InMemoryCache();\n\tconst link = ApolloLink.from([\n\t\tnew DebounceLink(DEFAULT_DEBOUNCE_TIMEOUT),\n\t\tnew HttpLink({\n\t\t\turi: GRAPHQL_API_URL,\n\t\t\theaders: {\n\t\t\t\tauthorization: `Bearer ${\n\t\t\t\t\tprocess.env.REACT_APP_GITHUB_PERSONAL_ACCESS_TOKEN\n\t\t\t\t}`,\n\t\t\t},\n\t\t}),\n\t]);\n\n\tcache.writeData({\n\t\tdata: {\n\t\t\tfilters: {\n\t\t\t\t__typename: 'Filters',\n\t\t\t\tname: '',\n\t\t\t\tlicense: '',\n\t\t\t},\n\t\t},\n\t});\n\n\treturn new ApolloClient({\n\t\tcache,\n\t\tlink,\n\t\ttypeDefs,\n\t\tresolvers: {\n\t\t\tMutation: {\n\t\t\t\tupdateFilters: (_, { filters }, { cache }) => {\n\t\t\t\t\tconst query = gql`\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfilters {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\tlicense\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t`;\n\t\t\t\t\tconst { filters: currentFilters } = cache.readQuery({ query });\n\n\t\t\t\t\tcache.writeData({\n\t\t\t\t\t\tdata: { filters: { ...currentFilters, ...filters } },\n\t\t\t\t\t});\n\t\t\t\t\treturn null;\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n}\n","import React from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport ReactDOM from 'react-dom';\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport App from 'src/modules/App';\nimport * as serviceWorker from './serviceWorker';\nimport configApolloClient from './configApolloClient';\n\nconst apolloClient = configApolloClient();\n\nconst AppWithProviders = AppComponent => (\n\t<ApolloProvider client={apolloClient}>\n\t\t<AppComponent />\n\t</ApolloProvider>\n);\n\nReactDOM.render(AppWithProviders(App), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}